# 動画

2. OSS開発手順
https://www.youtube.com/watch?v=cN3LUwJCf5U&list=PLg41HKRyxE6iIOFwVrosAvriRxRFCbFap&index=2

# スライド

https://slide.rabbit-shocker.org/authors/oss-gate/workshop-tutorial-overview/
https://rubygems.org/gems/rabbit-slide-oss-gate-workshop-tutorial-overview

# 内容

じゃあ今日がどういう内容になるかっていうのを話していきますね。
この目的はさっきもいったんですけども
OSSの開発に参加してない人が参加するようになる、
っていうところをフォローするワークショップをやっていきます。

どうしてできないかっていうのはさっき聞いた体でとばして行きますけども
なので体験することが大事っていうのもさっきのとおりです。

で、今日ここにいる人たちいくつか役割があるので
それを紹介します。
でいくつかあるのはこれくらいあるんですけども
今日はサポートメンターって言う人がいないんですけども

あの今後2回目、3回目とかでサポートメンターという人がいるようになると
アドタイムするですが、今日は省略します。

ビギナーって人はOSSの開発に参加したいけどまだやったことない
参加したことないって言う人達

サポーターっていうのはビギナーをサポートする、人達です。
で、今日は1対1、ビギナーとサポーターが隣りにいるような状態にしてます。
こなれてくると1サポーター、2ビギナーだったりするんですけど
今日は1対1でやってます。

で、サポーターの人はOSS開発を経験したことある、人達なので
大丈夫なんですよ。
初参加でも大丈夫なような内容にしてます。
今日はサポーターの人達に事前に
あーしてください、こうしてください、みたいなことは
説明していません。

うるさいっ

この進行する中で
これしてください、あれしてください
っていうのはいいます。
随時言いますので
サポーターの人は経験してあれば誰でもできます。

なので今日ビギナーの人も次回サポーターとしてはいることは
ぜんぜんできるので。

サポートメンターというのは今日いないんですけども
いたらどういう人か、っていうと
こう、ぐるぐる回ってて
メンターの人が困ったとか、ちょっといま足りないとか

あ、サポートメンター、サポートサポーターなんですけど
そっかぁ
サポーターの人をフォローする係の人なので
困ったらその人に相談するみたいな感じでできるので
もっといい感じです。

で進行役っていうのが私、で
名前の通り、次これやるとか、一回区切りますとか
ゆうようなことをやります。

で、これが今日のメンバーです。

実際どういう感じで進んでいくかっての説明します。

えーと、今日説明する流れは、たくさんある中の1個です。
慣れてきたら違うやり方でやっても全然問題ないですけど、
今日このやり方を真似してください。

たまに、ぼくはできるビギナーだから、って人と
難しい表現のビギナーの方がいて
これやりたいのでこうやります、みたいのもあるんですけども
今日はおすすめのやり方、一緒にやってみましょう。

流れですけども、まず
ユーザーとしてオープンソースのソフトウェアを動かします。
で、その中で気づいたことをフィードバックする、
というのがやり方です。
簡単ですね。

開発に参加するっていうと、なんか、イメージとして
開発環境整えて、テスト実行こうこうして
イメージあるかもしれませんが
そういうことはしません。

普通にユーザーとして動かしてみる。
その中で気づいたことをフィードバックする。
これだけです。

今日やるのは。いいですね。
でどういうふうになることを期待するかって言うと
普段動かすっていうのは、使うっていうのは　
みなさんもいろんなひとも
普通にやってると思うんですけど
その中で、普段、気づいてないけど、
なんか詰まったりとか普通にあるはずなんですね。

で、今日は、サポーターの人は、
隣に一緒にやっていくので
あ、ここ今つまったよね、きみ
みたいなことが、
自分では気づかなくても、他の人の視点できづけるようになる
はずんですよ。

で、今までは
インストール失敗したってなったら、
ツイッターで愚痴ったりとか
Qiitaに回避方法書きました、
みたいなやったりすることを、様を
インターネット上でよく見ると思うんですけども

そうじゃないですよ、っていうのを今日やっていくんですね。

そういう時にどうしたら良いかって言うと
開発元にフィードバックすればいいんですよ。

なんか愚痴って終わりとかじゃなくて
この環境でこうやったら動かないんです、
っていうのを報告すれば
一緒に直していけるので
そういうのをやる人を増やしたい。
ですね。

そういうのを体験してもらうことが
今日やりたこと
です。　

そして、動かすっていうのをまず説明します。
今回は対象OSSは決まっているので
ここはもうマストドンです。

その後に作業メモってのを書く場所を作ります。
で、これたぶんやったことないので
実際に一緒にうやりながら
あとで教えます。

で、メモを書きながらオフィシャルなドキュメント
を見ながら動かす、っていうのをやります。

普通ですよね。

みなさんならググって、よくわからないブログのやつを見ながら
っていうのもあるかもしれないですけど
今日は公式サイトのやつを使います。

で、オープンソースっていのは何か
みなさん、雰囲気でたぶんオープンソースを使ってると思うんですけど
オープンソースっていのは
オープンソースライセンスっていうのが決めてるところがあって
そのライセンスを使っているかどうか
で、わかります。

なので、このソフトウェアはオープンソースソフトウェアかな、と思ったら
ライセンスをみて、ここにあるリストに入っているかどうかを見るだけで
いいです。

なので、これオープンソースっぽいな、っていうのはないです。
もうYesかNoで決まります。

OSS設定してるか、してないかなので。

(
　ライセンスファイルはないけど
　ソースファイルがたぶん置いてあるような代物があったとして
　それがOSSではない。あーーー。
）

設定されてないソフトウェアはOSSではない。
Yes・Noはっきり決まります。

じゃ実際に、今日はマストドンなので
マストドンのライセンスを確認してみましょう。

そしてここにライセンス書いてありますけども
これがオープンソースのライセンスかっていうのを
確認すればいい。

オープンソースのライセンスは
オープンソースイニシアチブっていう団体が決めてるんですけど

リストが・・・

これが今見たやつと同じなので
リストにあるので
マストドンはオープンソースです。

っていうみたいなもの確認すればいいです。
なので今日は対象のOSSはマストドン
OSSなので大丈夫

動かす時のポイントなんですけども
作業メモを書くのが大事なんですよ。
なぜ大事かっていうのをやりながら
どんどん紹介してくんですけども

端的に言うと
自分では気づかないことが気づきやすくなるから
ですね。

でどういうふうな時に書くかっていうのを
実際にデモしながら説明します。

で、まず作業メモを書く場所をつくります。
じゃあ、一緒にやっていきますよ。

Githubのページを開いてください。

ここでossのgateのworkshopで検索してください
みつからないので
・・・
入れられる人はURLに入れていいです。

わかります？ここ行ってください。

はい行きました？みんないきました？
隣の人見ていけてないところあります？
大丈夫ですか？

じゃあこの右側のところに
issuesをいってください。
この右側のところにnew issueってのがあります。
ポチッとすると
テンプレートがあります。

テンプレートをみるとタイトルを設定します。
っていうのがあるんですけども
このテンプレートっていうのがこの中にあります。
で、これを最初にコピペしてきます。

いいですか？ここまだできます？

で、このテンプレートのなかに$カッコっていうのが何個かあります。
ここは自分で評価してください。

なのでロケーションはpixiv
yearは2017、monthは6、dayは29
アカウント名は自分のアカウント名に
OSS名はマストドン
こんな感じになるわけです。

こうなってますか？
これで作ってください。

いいですか？できました？

ここにメモを書いていくと。

で実際にメモするさまを見せるので
このくらいの粒度でメモすればいいんだなっていうのを
知ってください。

じゃあまず、私がユーザーとして動かします。

公式サイトを見つけよう。

同じコメントを編集してから書くんじゃなくて
追記追記でいいです。

マストドンで検索しよう。

URLこれになりました、みたいなのを貼るわけですね。

探したけどここがオフィシャルリポジトリぽいので
1つめは日本サイトで公式サイトではなさそう。

基本なんでも書いて欲しいんです。

3つ目に合ったリポジトリぽいものから始めよう。

みたいなかんじですね。

このくらいの粒度で書いていきます。

メモの例はいいです。

じっさい10分くらいやってみてください。

やってこうだなってのがわかったくらいで止めます。
止めて、止めた後に
フィードバックの方法も説明します。
止めてもまたすぐに次の作業をする時間がくるので
やめてって言ったら、ぱっとやめてください。

いいですね。

10分今やったみたいにユーザーとして動かすっていうのをやってください。

サポーターの人はユーザーの人を見守ってください。
大事なことは教えないことです。
教えるとなぜ良くないかって言うと
今日の大事なことは
ビギナーの人が体験することなんですよ。
教えちゃうと
体験する機会を奪ってることになるんですね。
あるいは、ビギナーの人が1人だとできないな、
みたいなイメージを持っちゃうんですよ。

サポーターの人いたからできたみたいなのは良くないので
教えないでください。
で、なんか調べるみたいな時は
自分のパソコンを使わないで
ビギナーのパソコンで
なんか、これ打ってみようかとか
やめてください。

いいですね。

やりすぎないのが大事なことで
やるのは自分が何かするんじゃなくて
後押しすることです。

じゃぁ10分やってみてください。

