動画
02: OSSの開発手順 @ 大阪ワークショップ 2017-02-25
https://www.youtube.com/watch?v=SzLrcr1w7v4&list=PLg41HKRyxE6jpvMiXuTHdvSzlB_9KDEWk

スライド
https://slide.rabbit-shocker.org/authors/oss-gate/workshop-tutorial-overview/


OSS開発手順1

じゃ開発のやり方を１個だけ説明しますのでそれに従って今日は体験するというのをやります。
これは極論的ですけども未経験だった人が経験したことがある
っていう状態になることを目的にします。

体験することが大事です。

ここにいる人達の役割を最初に紹介します。

マックスの時はこのくらいいるんですけども
今日はレポーターという人はいない。
他の人はいます。

ビギナーの人「開発に参加したことがない、けど、気持ちはある」
あるいは「参加したことがあるけど、まだ自信がない」
という人がビギナーの人。
あってますか？

メンターはビギナーの人をサポートする人です。
（※現在はサポーターという呼称に変わっている）
で、今日のメンターの人は、だいたい初参加なんですけども
初参加でも初メンターでも大丈夫なような
内容に、しています。

どういう風にしているかっていうと、私今進行係という役割なんですけども
私が「この時はメンターはこうしてください」というのを随時言います。
なので「ああ、そうなんだな。だったらそうしよう。」というふうにやればいいです。
やってみて困ったときも、サポートメンターという人がいます。

今日は東京から後藤さんがいらしてます。
ずっとぶらぶらしてます。
なので、あ、なんかメンターの人が困ったなっと思ったら
ふっと見るとたぶんどっかを歩いていたりするので、
こっち、って言えば来てくれます。
そうすると、相談に乗ってくれます。
後藤さんは何回もメンターやっているしサポートもやっているので
大丈夫です、大丈夫だよ、って言ってくれます。

私も進行してない時はぶらぶらしてるので、後藤さんが埋まってるときでも
私が、こう、あ、じゃ、なんですか？って聞くこともできます。

なので、メンターの人は基本的には、やり方随時説明するので、大丈夫です。
で、やってる時に困ったときも、私と後藤さんがうろちょろしてるので大丈夫なはずです。
大丈夫じゃなかったらどう住んだ、って話はしません。

あとはレポーターはいません。

進行役というのは私であの、次これやりますよ、とかじゃあ時間なんで次行きます、とかいう係です。

今日の流れなんですけども、東京は午前からやってるんですけども
まず、「OSSを動かす」という時間があります。
で、おやつ休憩を挟んで実際にフィードバックするという体験をします。
その後に今日のまとめとふりかえりというのをやります。

普通のワークショップだとここがないんですけども、われわれのはあります。
何であるかっていうと
ここで何するかっていうと、今日、「何よかったね」とか「ここ課題だね」みたいなのを
共有して、じゃあ次、それ改善するにはもっと次良くするにはどうしたらいいか、というとこまで
会の中でやるんですよ。
で、次はそれをふまえてもっと良くやる、というのが我々のやりかたです。

最後にアンケートを書いてもらうんですね。
アンケートの質問はここらへんにこうまとまっているんですけど
まぁ見えないと思うんですけど
「満足しましたか？」とか「どういう風に感じましたか？」とかを最後に書いてもらいます。

これをその場で開封してあぁ、こういう結果があったんですね、今後どういう風にしたらいいですかね。
というのを話しとかをするところまでが今日の会です。

それを実際に活かすのが次の回です。

という流れ。

最初の動かすっていうところを説明します。
まず最初に動かすためにはOSSを決めなきゃいけません。
でそれを決めるってのは最初にやります。
メンターの人は今日はほぼ1対1でたまに2人の人がいるんですけども基本1対1です。
メンターの人はビギナーの人が今日何するか決めるのをサポートします。
メンターが知らないOSSでもいいです。
ビギナーの人がそれやりたいと言ったらそれでいいです。

なぜなら大丈夫だから。

さっきも言いましたけども、大事なことだから何回も言うんですけど
メンターの人が答えを教える必要は全く無いです。
むしろ答えを教えないでくださいくらいのほうです。

なんでかっていうと、メンターいないと出来ない、と思っちゃう体験になっちゃうからなんですよ。
答えを教えちゃうと。
じゃなくてメンターの人は一緒に考えるとか悩んであげればいいです。

わからないことでもこういうふうに進めればいけるんだなっていうのを体験することが大事なので
むしろ知らないほうが良いかもしれません。
しってるとついついこう言いたくなって、あぁいまのせっかくの経験をうばっちゃった、みたいなこともあるので
メンターが知ってる方に誘導するみたいなことはしないでください。
いいですね。ビギナーがやりたいことを優先で。

つかうOSSはビギナーの人が使っているものを基本的に選べば、選んでください。
身近だからとかどういうふうなのかわかるから。
難易度も気にしなくていいです。
難しいとかこれ簡単とか気にしなくていいです。
ビギナーがやりたいって思ったやつはそれを選べばいいです。
でどういう風に選ぶかなんですけども

デモします。

ええ、じゃ来てください。前に。
あなたです。
はい、ビギナーですよね。
どういうふうにやるかっていうのを今からデモしますね。

メンターの人はそれを参考に決めるわけです。

はい、ここに立ってください。

普段つかっているOSSはなんですか？
なんか教えて下さい。

Ruby

Ruby、はい、OSSです。他には何使ってますか。

最近Rabbitを使いました。

他に何かありますか？

PerlとかPHPとかJavascriptとか。

言語が多いですね。

あぁ、Jekyllをつかって

あ、今なんて言いました？

動かなくて困った。

じゃそういうの使ってて動かなくて困ったっていう経験を持っているやつ、というのがある。

そうですね。

それが良いんじゃないかな。

じゃあJekyllってやつがOSSかどうか確認してみましょう。
今日はOSSの開発に参加するやつなのでOSSかどうかっていうのを確認した方がよくて
OSSかどうかっていうのを判断する仕方なんですけども 明確です。
ダラッと言いましたけど。
ライセンスを見ます。
これがJekyllのホームページですね。
でライセンス書いてません。

（ライセンスを探す、Githubで発見）

これを見るとMITライセンスと書いてますと。
ライセンスがどれによるか、というのがOSSかどうかなんですよ。
OSSかどうかっていうのは、ながいなぁこれ、
オープンソースイニシアチブっていうところがあって
ここがオープンソースのライセンスはこれです、っていうリストを作ってるんですね。
で、そこに含まれてるライセンスならオープンソースです。
含まれてなかったらオープンソースじゃないです。

なのでこれを今みてみるとMITライセンスですね。
お、ありました。
なのでこれはオープンソースのソフトウェアなので、
じゃあ今日はこのオープンソースソフトウェアの開発に参加してみましょう。

っていう感じで。
いいですね。
まず聞いてみるのは、どういうOSS使ってますかね。
それでもし今みたいな、つまったことあったんですよ、とか
思い入れがある、とかそういう話を聞いたら。
じゃあそれにしましょうか。
みたいな話をして、ライセンスを確認して
リストに入っていたらOSSなのでこれをやりましょう、でOKです。

できそうですか？

できそうな人？

